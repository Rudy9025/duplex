Perfect! If you’d rather use file paths directly in your code (instead of uploading through an API), here’s a Spring Boot version that:
	•	Reads two CSV files from local paths (you specify in the code).
	•	Compares selected columns by index.
	•	Prints the result or returns it in an API if needed.

⸻

Updated Spring Boot Code Using File Paths

package com.example.demo.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.*;
import java.util.*;

@RestController
public class FileCompareController {

    @GetMapping("/compare")
    public List<Map<String, Object>> compareFromFiles() throws IOException {
        // Replace with your CSV file paths
        File file1 = new File("C:\\Users\\YourName\\Downloads\\file1.csv");
        File file2 = new File("C:\\Users\\YourName\\Downloads\\file2.csv");

        // Set the column indexes you want to compare (0-based index)
        int col1 = 1; // File1 column index
        int col2 = 2; // File2 column index

        List<String[]> file1Data = readCSV(file1);
        List<String[]> file2Data = readCSV(file2);

        return compareColumns(file1Data, file2Data, col1, col2);
    }

    private List<String[]> readCSV(File file) throws IOException {
        List<String[]> rows = new ArrayList<>();
        if (!file.exists()) return rows;

        BufferedReader br = new BufferedReader(new FileReader(file));
        String line;
        while ((line = br.readLine()) != null) {
            rows.add(line.split(",", -1));
        }
        return rows;
    }

    private List<Map<String, Object>> compareColumns(List<String[]> data1, List<String[]> data2, int col1, int col2) {
        List<Map<String, Object>> result = new ArrayList<>();
        int maxLen = Math.max(data1.size(), data2.size());

        for (int i = 0; i < maxLen; i++) {
            String val1 = (i < data1.size() && col1 < data1.get(i).length) ? data1.get(i)[col1] : "";
            String val2 = (i < data2.size() && col2 < data2.get(i).length) ? data2.get(i)[col2] : "";

            String status = val1.trim().equalsIgnoreCase(val2.trim()) ? "Matched" : "MisMatched";

            Map<String, Object> rowMap = new HashMap<>();
            rowMap.put("index", i + 1);
            rowMap.put("value1", val1);
            rowMap.put("value2", val2);
            rowMap.put("status", status);
            result.add(rowMap);
        }

        return result;
    }
}



⸻

How to Use
	1.	Replace file paths:

File file1 = new File("C:\\Users\\YourName\\Downloads\\file1.csv");


	2.	Run the app.
	3.	Open browser or Thunder Client and hit:

GET http://localhost:8080/compare



⸻

Let me know if you’d like to:
	•	Write the result to another CSV file.
	•	Filter only mismatches.
	•	Pass file paths dynamically from UI or config.