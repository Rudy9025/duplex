To dynamically adjust the number of rows shown in a <p-table> (PrimeNG table) based on screen height in Angular, you can bind the [rows] input to a variable and calculate its value at runtime based on the screen height.

Here’s how you can do it:

⸻

Step 1: Update Component Code (TypeScript)

import { Component, HostListener, OnInit } from '@angular/core';

@Component({
  selector: 'app-your-component',
  templateUrl: './your-component.component.html',
})
export class YourComponent implements OnInit {
  customers: any[] = []; // your data
  rows: number = 5;

  ngOnInit() {
    this.setRowsBasedOnScreenHeight();
  }

  @HostListener('window:resize', ['$event'])
  onResize() {
    this.setRowsBasedOnScreenHeight();
  }

  setRowsBasedOnScreenHeight() {
    const height = window.innerHeight;

    if (height > 800 && height < 1000) {
      this.rows = 10;
    } else if (height >= 1000) {
      this.rows = 15;
    } else {
      this.rows = 5;
    }
  }
}


⸻

Step 2: Update the Template (HTML)

<p-table
  [value]="customers"
  [paginator]="true"
  [rows]="rows"
  [responsiveLayout]="'scroll'">
  <!-- your columns here -->
</p-table>


⸻

Optional Tips:
	•	If your component is standalone in Angular 17+, make sure you import TableModule from primeng/table.
	•	You can fine-tune the screen height conditions (>800, <1000) to your UI layout.
	•	HostListener listens to window resize and recalculates row count on-the-fly.

Would you like to add responsiveness for mobile views as well?